divert(-1)

# file      : XSC/SemanticGraph/Fundamental.hpp.m4
# author    : Boris Kolpackov <boris@dre.vanderbilt.edu>
# cvs-id    : $Id$

include(`Fundamental.m4')

define(`fundamental_type', `fundamental_type_impl(`make_class_name(`$1')', `$1')')

define(`fundamental_type_impl', `

    //
    //
    //
    class $1 : public virtual FundamentalType
    {
    public:
      static Introspection::TypeInfo const&
      static_type_info ();

    protected:
      friend class Graph<Node, Edge>;

      $1 ()
      {
        type_info (static_type_info ());
      }
    };')
divert(0)dnl
dnl
dnl
dnl
// file      : XSC/SemanticGraph/Fundamental.hpp
// author    : Boris Kolpackov <boris@dre.vanderbilt.edu>
// cvs-id    : $Id$

// Note, that this file is automatically generated!
//

#ifndef XSC_SEMANTIC_GRAPH_FUNDAMENTAL_HPP
#define XSC_SEMANTIC_GRAPH_FUNDAMENTAL_HPP

#include <XSC/SemanticGraph/Elements.hpp>

namespace XSC
{
  namespace SemanticGraph
  {
    //
    //
    //
    class FundamentalType : public virtual Type
    {
    public:
        static Introspection::TypeInfo const&
        static_type_info ();

    protected:
      FundamentalType ()
      {
        type_info (static_type_info ());
      }
    };
dnl
fundamental_type(`any type')
fundamental_type(`any simple type')
fundamental_type(`byte')
fundamental_type(`unsigned byte')
fundamental_type(`short')
fundamental_type(`unsigned short')
fundamental_type(`int')
fundamental_type(`unsigned int')
fundamental_type(`long')
fundamental_type(`unsigned long')
fundamental_type(`decimal')
fundamental_type(`integer')
fundamental_type(`non positive integer')
fundamental_type(`non negative integer')
fundamental_type(`positive integer')
fundamental_type(`negative integer')
fundamental_type(`boolean')
fundamental_type(`float')
fundamental_type(`double')
fundamental_type(`string')
fundamental_type(`normalized string')
fundamental_type(`token')
fundamental_type(`name')
fundamental_type(`NM TOKEN')
fundamental_type(`NC name')
fundamental_type(`id')
fundamental_type(`id ref')
dnl
  }
}

#endif  // XSC_SEMANTIC_GRAPH_FUNDAMENTAL_HPP
