Tue Dec  2 18:11:58 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * XSC.mpc:

	  . Updated the install name of the XSC binary.

Thu Nov  6 03:31:55 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CXX/WriterHeader.cpp:

          . Bug fix where the constructor for the writer was generated
            with unncessary scoping.

Thu Nov  6 02:50:10 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * XSC.mpc:

          . Changed the executable name from 'xsc-binary' to 'xsc'.

        * contrib/Utility.mpc:

          . Removed the 'externals' feature specification.

Wed Nov  5 21:30:23 UTC 2008  James H. Hill  <j.hill@vanderbilt.edu>

        * MPC/config/xsc_be.mpb:
        * contrib/Utility.mpc:

          . Improved the project specification to handle cases when
            externals are ignored during a repo checkout. A prime example
            is when a checkout happens using the https:// protocol over
            a proxy server. The externals are defined using the svn://
            protocol, which is not recognizable by the proxy server. This
            causes to the checkout process to fail, and thus prevents XSC
            from building properly.

            The solution to this problem (or one solution) is to omit
            externals so the repo checkout succeeds. This then requires
            developers to have the original version of the external
            present on the machine. We, therefore, use the *feature*
            specification in a .mp{c|b} file, such as 'feature (external)'
            and 'feature (!external)', to control how to configure the
            project build accordingly.

            So far, this seems to work in the case when 'externals=0'. I
            still need to validate this process when 'externals=1'.

Fri Oct 24 22:15:14 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * XSCRT/XSCRT/utils/Buffer_Reader_T.h:
        * XSCRT/XSCRT/utils/Buffer_Reader_T.cpp:
        * XSCRT/XSCRT/utils/Buffer_Writer_T.cpp:

          . Bug fix for compilation errors.

Thu Sep 11 19:04:40 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CXX/libCXX.mpc:
        * XSCRT/XSCRT/utils/Reader_Writer_Base_T.cpp:

          . Fixed build errors on non-Windows systems.

Tue Sep  9 22:21:47 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * XSCRT/XSCRT/utils/Buffer_Writer_T.h:
        * XSCRT/XSCRT/utils/Buffer_Writer_T.cpp:

          . Re-implemented the buffer writer so that it uses an internal
            buffer when writing the XML document. Also, implemented
            accessor methods for querying about the internal buffer.

Thu Sep  4 20:32:59 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * XSCRT/XSCRT/XSCRT.mpc:
        * XSCRT/XSCRT/utils/Buffer_Reader_T.h:
        * XSCRT/XSCRT/utils/Buffer_Reader_T.cpp:
        * XSCRT/XSCRT/utils/Buffer_Writer_T.h:
        * XSCRT/XSCRT/utils/Buffer_Writer_T.cpp:

          . First version of a buffer reader/writer for serializing/
            deserializing XML to C++ objects. The implementation is
            quick and dirty and can therefore benefit from several
            optimizations.

Tue Aug 19 13:40:00 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CXX/Inline.cpp:
        * CXX/WriterSource.cpp:
        * XSCRT/XSCRT/Traversal.tpp:

          . Still trying to fix a bug related to using the <xsd:extension>
            tag. Committing current progress of bug resolution.

        * XSCRT/XSCRT/utils/Console_Error_Handler.cpp:

          . Updated the console error handlers to print the line and
            column number of the error.

Sat Aug 16 15:55:47 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>


        * XSCRT/XSCRT/XSCRT.mpc:
        * XSCRT/XSCRT/utils/Console_Error_Handler.h:
        * XSCRT/XSCRT/utils/Console_Error_Handler.cpp:
        * XSCRT/XSCRT/utils/File_Reader_T.h:
        * XSCRT/XSCRT/utils/File_Reader_T.cpp:
        * XSCRT/XSCRT/utils/File_Writer_T.h:
        * XSCRT/XSCRT/utils/File_Writer_T.cpp:
        * XSCRT/XSCRT/utils/Reader_T.h:
        * XSCRT/XSCRT/utils/Reader_T.cpp:
        * XSCRT/XSCRT/utils/Reader_Writer_Base_T.h:
        * XSCRT/XSCRT/utils/Reader_Writer_Base_T.cpp:
        * XSCRT/XSCRT/utils/Writer_T.h:
        * XSCRT/XSCRT/utils/Writer_T.cpp:
        * XSCRT/XSCRT/utils/XML_Schema_Resolver_T.cpp:

          . Redesigned the utility backend for reading/writing XML
            documents from/to XSC generated class objects. It is now
            a LOT easier to use and more intuitive. Also, it has be
            capabilities to being expanded to work with other formats
            besides a file.

        * XSCRT/XSCRT/utils/File.h:
        * XSCRT/XSCRT/utils/File.cpp:
        * XSCRT/XSCRT/utils/File_T.h:
        * XSCRT/XSCRT/utils/File_T.cpp:

          Removed these files.

Fri Aug 15 05:14:48 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CXX/Generator.cpp:

          . Bug fix where filename that had a dash generated invalid
            guard macros for the header file.

Thu Jul 31 17:39:43 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CXX/Elements.hpp:

          Fixed compiler warnings related to the initializing member
          variables in the incorrect order, i.e., not in the same order
          as specified in the header file.

        * XSC.mpc:
        * xsc.cpp:

          Bug fix where the 'backend' command-line option was specified
          incorrectly for the latest version of Boost.

Wed Jul 30 23:35:45 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * XSC.mpc:

          Removed boost_system base project since its not needed to build
          XSC.

Wed May  7 19:35:39 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/xscrt.mpb:

          XSC include library was missing for non-Windows builds.

        * XSCRT/XSCRT/XSCRT.mpc:
        * XSCRT/XSCRT/XSCRT_export.h:

          Fixed bugs related to the export header definition on non-Windows
          systems. This was resolved by regenerating the header file with
          the latest PERL script.

Wed May  7 17:38:10 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CXX/WriterHeader.cpp:

          Fixed build errors that appparently were not caught in VC7.1.

        * MPC/config/xsc_be.mpb:

          Fixed build errors related to the ordering of the input
          libraries.

        * XSC.mpc:

          Removed the XSC library input.

        * XSC/Parser.cpp:

          Used istringstring to handle converting strings to integers.

Mon Apr 28 15:26:05 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CXX/Forward.cpp:
        * CXX/Header.cpp:

          . Bug fix where forward declarations were not handled correctly
            for named types. It would generate a fully qualified type name,
            which included its scope. Forward declarations can not contain
            a scope. This was resolved by adding different generation paths
            for named/unnamed types.

Mon Apr 28 14:42:20 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CXX/Elements.hpp:
        * CXX/Elements.cpp:
        * CXX/Forward.cpp:
        * CXX/Inline.cpp:
        * CXX/Source.cpp:
        * CXX/TraversalHeader.cpp:
        * CXX/TraversalSource.cpp:
        * CXX/TypeInfoSource.cpp:
        * CXX/WriterHeader.cpp:
        * CXX/WriterSource.cpp:
        * XSC/Parser.cpp:
        * XSC/Traversal/Fundamental.hpp:
        * XSCRT/XMLSchema/Traversal.hpp:
        * XSCRT/XMLSchema/Types.hpp:
        * XSCRT/XSCRT/ExtendedTypeInfo.hpp:

          . Implemented support for generating writer types for complex
            types that contained anonymous child elements.

Sat Apr 26 16:11:23 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * XSC/SemanticGraph/Elements.hpp:

          Accidently removed the anonymous () method and commited to
          source code to the repo.

Sat Apr 26 15:45:05 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CXX/Elements.hpp:
        * CXX/Elements.cpp:
        * CXX/Header.cpp:
        * CXX/Inline.cpp:
        * CXX/Source.cpp:

          . Bug fix where anonymous child elements where not handled
            properly. Now anonymous child elements are generated as
            a nested class.

        * XSC/Parser.cpp:

          . Bug fix where the cardinality on elements was not handled
            properly. The current implemenatation ignored the actual
            valued of the cardinality and always used 0 or 1. This made
            it difficult to determine how to generate the correct
            implementation for a sequence.

        * XSC/SemanticGraph/Elements.hpp:

          . Redesigned how anonymous types are handled. Anonymous types
            are now given a name by default, but a flag in class Name
            determines if the type is anonymous. This makes it a LOT
            easier to deterine the name of an anoymous types class when
            in many cases the name would not be available.

        * XSC/SemanticGraph/Fundamental.hpp:
        * XSC/SemanticGraph/Fundamental.cpp:
        * XSCRT/XMLSchema/Traversal.hpp:
        * XSCRT/XMLSchema/TypeInfo.tpp:
        * XSCRT/XMLSchema/Types.hpp:
        * XSC/Traversal/Fundamental.hpp:

          . Added support to xs:anyURI elements.

        * XSC/Traversal/Complex.cpp:

          . Reformated the source code so its easier to debug in Visual
            Studio.

        * XSC/libXSC.mpc:

          . Included template source files. This is useful for Visual
            Studio users who want to be able to browse the source code.

          . Removed the Utilitys from the 'libs' parameter since it was
            forcing linkage against the wrong library on non-Windows
            machines.

        * XSCRT/XSCRT/XSCRT.mpc:

          . Included template source files. This is useful for Visual
            Studio users who want to be able to browse the source code.

Thu Apr 24 16:06:23 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/xscrt.mpb:

          Fixed build issues related to static vs. dynamic linkage. Right
          now, its just a hack until we figure out how to correctly
          resolve this problem.

Wed Apr 23 23:29:58 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/xscrt.mpb

          Force linkage against the static version of the libXSC.

Wed Apr 23 22:10:44 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * XSCRT/XSCRT/utils/File_T.cpp:

          Bug fix where manually releasing the parser caused Xerces-C
          to throw an exception. Right now, this functionality has been
          disabled.

Wed Apr 23 21:05:50 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CXX/ParserHeader.cpp:
        * CXX/ParserSource.cpp:
        * CXX/WriterHeader.cpp:
        * CXX/WriterSource.cpp:

          The top-level reader and writer methods are now defined in a
          reader/writer namespace to prevent ambiguity when using either
          function as a pointer-to-function.

        * XSCRT/XSCRT/utils/File_T.h:
        * XSCRT/XSCRT/utils/File_T.cpp:

          . The parser is released whenever the reader class is
            destroyed.

          . Removed the 'const' quantifier from the writer () method.

Wed Apr 23 18:13:39 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CXX/Elements.hpp:
        * CXX/Header.cpp:
        * CXX/Inline.cpp:
        * CXX/Source.cpp:
        * IDL/Elements.hpp:
        * XSC/Parser.cpp:
        * XSC/Parser.hpp:

          . Bug fix where writers for anonymous types where not generated
            correctly. The bug was resolved by naming the anonymous type
            at parsing time, which allowed the backend generator's to
            handle it as if it was a named type.

          . Anonymous types have to suffix 'Type'.

Tue Apr 22 00:01:05 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/xscrt_idl.mpb:

          Base project for using the IDL XSC runtime.

Thu Apr 17 23:18:03 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * IDL/Generator.cpp:

          . Bug fix where --idl-namespace-regex was specified as
            --cxx-namespace-regex.
          . Bug fix where not using the --idl-namespace-regex
            parameter caused the program to terminate abnormally.

        * MPC/config/xsc_base.mpb:
        * XSC.mpc:

          Changed generated binary file from `xsc-binary' to `xsc'.

Tue Apr 15 21:54:21 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * XSCRT/XSCRT/XSCRT.mpc:

          Inserted an empty Inline_Files {} block to prevent automatic
          inclusion of inline files.

        * XSCRT/XSCRT/utils/File.h:
        * XSCRT/XSCRT/utils/File.cpp:
        * XSCRT/XSCRT/utils/File_T.cpp:

          Implemented an is_open () method to test if the XML file
          was opened.

Wed Apr  9 22:47:11 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/xscrt.mpb:

          Added configuration parameter to ignore one of the default
          libraries that was conflicting when building the release
          version.

Wed Apr  2 21:23:25 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/xsc_base.mpb:
        * MPC/config/xsc_be.mpb:
        * MPC/config/xsc_common.mpb:
        * MPC/config/xsc_cxx.mpb:
        * MPC/config/xsc_idl.mpb:
        * MPC/config/xscrt.mpb:

          MPC base projects for using XSC in projects.

        * contrib/Utility.mpc:
        * XSC/libXSC.mpc:
        * CXX/libCXX.mpc:
        * IDL/libIDL.mpc:
        * XSC.mpc:

          Refactored the build scripts by pushing much of the project
          settings into base files.

        * XSC.mwc:

          Removed the unnecessary include parameters from the
          binary scope.

        * XSC/XercesString.cpp:
        * XSC/XercesString.hpp:

          Implemented the release () method, which gives ownership of the
          string to the client.

        * XSCRT/XSCRT/XSCRT.mpc:
        * XSCRT/XSCRT/XSCRT_export.h:

          Now the XSC runtime files are compiled into a single binary.

        * XSCRT/XSCRT/utils/File.h:
        * XSCRT/XSCRT/utils/File_T.h:
        * XSCRT/XSCRT/utils/File_T.cpp:

          Changed the template types from std::string <T> to T *
          types since it may be too expensive in some cases to
          construct a std::string object.

        * XSCRT/XSCRT/utils/XML_Schema_Resolver_T.h:
        * XSCRT/XSCRT/utils/XML_Schema_Resolver_T.cpp:

          Predefined resolvers that can be used to determine the location
          of a XML schema definition file at runtime.

        * MPC/config/xsc.mpb:

        * XSCRT/XSCRT/utils/XSCRT_Utils_export.h:
        * XSCRT/XSCRT/utils/utils.mpc:

          Removed these files.

Mon Mar 10 15:14:30 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * XSC.mwc:
        * XSCRT/XSCRT/utils/File.h:
        * XSCRT/XSCRT/utils/File_T.h:
        * XSCRT/XSCRT/utils/File_T.cpp:
        * XSCRT/XSCRT/utils/utils.mpc:

          Added a generic writer to the utility classes.

Wed Mar  5 21:26:10 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC:
        * MPC/config:
        * MPC/config/xsc.mpb:
        * MPC/config/xsc_common.mpb:
        * XSC.mwc:

          Moved all the base projects to MPC/config, which is the
          standard convention for DOC projects.

        * xsc.mpb:
        * xsc_common.mpb:

          Removed these files.

Wed Mar  5 21:09:16 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * XSC.mwc:
        * XSCRT/XSCRT/utils:
        * XSCRT/XSCRT/utils/File.h:
        * XSCRT/XSCRT/utils/File.cpp:
        * XSCRT/XSCRT/utils/File_T.h:
        * XSCRT/XSCRT/utils/File_T.cpp:
        * XSCRT/XSCRT/utils/XSCRT_Utils_export.h:
        * XSCRT/XSCRT/utils/utils.mpc:

          Implemented a utility class to simplify reading XML files and
          populating XSC generated objects.

        * xsc.mpb:
        * xsc_common.mpb:

          Base projects used to build XSC.

2007-08-29    <wotte@localhost.localdomain>

        * XSC.mwc
        * XSC/Parser.hpp
        * XSC/SemanticGraph/Fundamental.cpp
        * XSC/SemanticGraph/Fundamental.hpp
        * XSC/SemanticGraph/Fundamental.cpp.m4
        * XSC/SemanticGraph/Fundamental.hpp.m4
        * XSC/Parser.cpp
        * CXX/Generator.cpp

          Changes necessary to support AttributeGroups.

2007-07-05    <wotte@localhost.localdomain>

        * xsc.cpp

          Fixed a couple subtle bugs with program_options.

Thu Mar  1 07:12:19 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * XSC/SemanticGraph/Fundamental.hpp
        * XSC/Parser.cpp

          Fixed bug whereby restrictions inside simple types would be
          interpreted as both complex types and simple types, messing up
          generated code.

        * CXX/Elements.hpp
        * CXX/Generator.cpp
        * CXX/Header.cpp
        * CXX/Header.hpp

          Fixed suble bug that arose as a result of the migration to
          boost::program_options, causing header file names to be improperly
          generated for include guards and includes.

Thu Mar  1 00:45:49 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * xsc.cpp

          Fixed an incorrect include.

Wed Feb 28 14:32:25 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * XSC/SemanticGraph/Context.hpp

          Missing from previous commit.

Wed Feb 28 13:01:34 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * CXX/Source.cpp
        * CXX/Inline.cpp
        * CXX/Header.cpp

          Various compile error/warning fixes in generated code.

        * XSC.mwc
        * XSC/Traversal/Elements.hpp
        * XSC/SemanticGraph/Schema.hpp
        * XSC/SemanticGraph/Elements.hpp
        * contrib/Utility.mpc
        * CXX/Elements.hpp
        * CXX/Generator.cpp
        * CXX/Generator.hpp
        * IDL/Generator.cpp
        * IDL/Generator.hpp
        * xsc.mpb
        * XSC.mpc
        * xsc.cpp

          Changes to support 1) removal of link-time dependancy on
          CCF, 2) use of boost program options instead of command line
          parser from CCF.

Wed Feb 28 03:11:47 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * contrib

          Added CodeGenerationKit and Utility from the ACE repository
          as externals.

Wed Feb 21 16:27:30 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * xsc.cpp

          Fixed specification of default search path, so that it will
          correctly check the provided file as an absolute path.

Mon Feb 19 15:07:58 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * XSC/Parser.hpp
        * XSC/Parser.cpp

          Formatting changes, changes to support --search-path, fixed a
          couple small memory leaks.

        * XSC/XercesString.cpp
        * XSC/XercesString.hpp

          A simple std::string like wrapper for XMLCh* based strings.

        * XSC/XML_Schema_Resolver.cpp
        * XSC/XML_Schema_Resolver.hpp

          Simple schema resolver used by Xerces to support --search-path.

        * xsc.cpp

          Added new command line argument --search-path, wich can be used
          to create a stack of paths XSC will search when attempting to resolve
          both schema provided as arguments, and as included schemata.

        * CXX/Generator.cpp

          Changed the filename generation regular expressions to account for
          a behavior change in the boost regex library (possibly platform
          portability problem) which would greedily match extensions twice,
          resulting in transformation like:

          foo.xsd => foo.hpp.hpp

Mon Feb 12 23:34:40 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CXX/libCXX.mpc:
        * IDL/libIDL.mpc:
        * XSC/libXSC.mpc:

          Removed the libout property.

        * xsc.mpb:

          - Added a default libout property, which points to
            $(XSC_ROOT)/lib
          - Added $(XSC_ROOT)/lib to the libpaths property.

Mon Feb 12 22:22:51 UTC 2007  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CXX/Elements.hpp:

          Moved the Traverser template declared in the has template
          method outside the function. This was preventing XSC from
          compiling on tools that supported templates correctly.

        * CXX/Header.cpp:
        * CXX/Inline.cpp:
        * CXX/Source.cpp:
        * CXX/TraversalHeader.cpp:
        * CXX/TraversalSource.cpp:
        * CXX/WriterHeader.cpp:
        * CXX/WriterSource.cpp:
        * IDL/Definition.cpp:

          Added a preprocessor definition that will undef min and max
          definition on Windows since the windows.h header files is
          causing conflicts with classes that define a max and min
          method.

        * XSC.mpc:

          Changed the install directory of XSC to $(XSC_ROOT).

        * xsc.cpp:

          Update the driver program so that it is compatible with the
          lastest version of CommandLineOptions in CIDL.

Tue Jan 30 21:43:32 GMT 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * CXX/Generator.cpp
        * IDL/Generator.cpp

          Updated to work with recent changes to CommandLineParser

        * XSC/Parser.hpp

          Random compile error.

Tue Jan 30 21:08:04 GMT 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * CXX/Elements.cpp
        * Tests/ComplexTypeImport/importee.xsd
        * XSC/Parser.hpp
        * XSC/Traversal/Fundamental.hpp
        * XSC/Traversal/Schema.hpp
        * XSC/Traversal/Elements.hpp
        * XSC/SemanticGraph/Fundamental.cpp
        * XSC/SemanticGraph/Element.hpp
        * XSC/SemanticGraph/Fundamental.hpp
        * XSC/SemanticGraph/Fundamental.cpp.m4
        * XSC/SemanticGraph/Fundamental.hpp.m4
        * XSC/SemanticGraph/Graph.tpp
        * XSC/Parser.cpp
        * xsc.cpp

          A number of changes imported from the old CVS repository,
          not gauranteed to compile.

Mon Jan 16 18:40:30 GMT 2006  William Otte  <wotte@dre.vanderbilt.edu>

        * CXX/Header.cpp
        * CXX/Inline.cpp
        * CXX/Source.cpp
        * CXX/TraversalHeader.cpp
        * CXX/WriterHeader.cpp
        * CXX/WriterSource.cpp
        * IDL/Elements.cpp
        * XSC/Parser.cpp
        * XSC/Parser.hpp

        Addressed compile warnings, additional commenting, errors in
        generated code.

Tue Dec 20 14:37:14  2005  William Otte  <wotte@dre.vanderbilt.edu>

        * Tests/Abstract/abstract.xsd

        Fixed a syntax error.

2005-12-20  William Otte  <wotte@dre.vanderbilt.edu>

        * xsc.mpb
        * XSC.mwc
        * XSC/libXSC.mpc
        * CXX/libCXX.mpc
        * XSC.mpc
        * IDL/libIDL.mpc

        Updates to the mpc system to bring it up to speed with recent
        enhancements to MPC base projects.

2005-12-18  James H. Hill  <hillj@isis.vanderbilt.edu>
  * Tests/Abstract/abstract.xsd
  * Tests/Abstract/abstract.xml

  Added test case for abstract complex types

2005-12-07  William Otte  <wotte@dre.vanderbilt.edu>

        * CXX/WriterHeader.cpp

        Removed Borland specifc ifdefs to make the fix from:
        2005-10-03  William Otte  <wotte@dre.vanderbilt.edu>
        apply to all compilers.

        * Examples/Library/Reader/Makefile
        * Examples/Library/Writer/Makefile

        Fixed the name of the xsc binary listed there.

2005-11-30  William Otte  <wotte@dre.vanderbilt.edu>

        * xsc.cpp

        Updated version string.

        * CXX/Elements.hpp
        * CXX/Generator.cpp
        * CXX/Header.cpp
        * CXX/Inline.cpp
        * CXX/WriterHeader.cpp
        * XSC/Parser.cpp

        Added support for optionally generating code using lists or
        vectors for sequences with cardinality greater than one.

2005-10-03  William Otte  <wotte@dre.vanderbilt.edu>

        * CXX/Header.cpp

        Added opererator== and operator!= prototypes after classes that
        define them

        * CXX/WriterHeader.cpp
        * CXX/WriterSource.cpp

        Fixed compile errors in Borland.

Fri Aug 19 09:39:48 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * CXX/Inline.cpp:

          Fixed the following errors: when the count operation is
          generated, the signature is size_t count_foo () const; however
          the definition has the const missing. Similarly, void add_foo
          (Foo_Type) opertion in the cpp file is generated as add_foo
          (Foo_Type) const; fixed this error

2005-08-16  William Otte  <wotte@dre.vanderbilt.edu>

        * CXX/Header.cpp
        * CXX/Inline.cpp

        Added a method to count the number of elements present when
        maxOccurs > 1.

2005-08-05  William Otte  <wotte@dre.vanderbilt.edu>

        * XSC/SemanticGraph.hpp

        Added this back into the repository.

Thu Aug  4 11:25:52 2005  Arvind Krishna  <arvindkr@arvindkr.qualcomm.com>

        * Tests/ComplexTypeImport:

          A simple test where a schema's type extends a type defined in
          another schema.

        * Tests/ComplexTypeImport/Importee.xsd:
        * Tests/ComplexTypeImport/Importer.xsd:

          Individual schema files.

Thu Aug  4 11:12:44 2005  Arvind Krishna  <arvindkr@arvindkr.qualcomm.com>

        * CXX/CDR.hpp:
        * CXX/CDR.cpp:
          Removed these extraneous files as these are not necessary now!

Wed Jul 20 17:15:16 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * CXX/Source.cpp:

          I had missed handling elements that can be optional. These occur
          in the schema as minOccurs=0 maxOccurs=1..n. These should be
          written at the end of writing a complex element and then read
          last and added to the element. This commit addresses this bug.

Wed Jul 20 15:14:28 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * Added XSC as a module to the WashU CVS.

Tue Jul 19 17:27:25 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * NEWS:

          Added a NEWS file that illustrates the latest and greatest
          feature additions to XSC.

Tue Jul 19 17:10:43 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * CXX/Elements.hpp:
        * CXX/Generator.cpp:
        * CXX/Header.cpp:
        * CXX/Inline.cpp:
        * CXX/Source.cpp:

          This commit completes the generation of CDR Reader Writer
          operations automatically from XML schemas. The issues that were
          resolved include ensuring (1) ordering of operations, i.e.,
          reads and write and done in the same order, (2) optional
          attributes are read after the element is constructed, and (3)
          adding sequences after element constructions. Further care had
          to be taken to maintain list of required elements in a complex
          type, write them first and then read them back, construct the
          element and then add the non essential attributes. This commit
          should do all of this. We need to start working on regression
          testing of the various XML schemas to ensure correctness.

Wed Jul  6 12:14:37 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * CXX/Elements.hpp:
        * CXX/Generator.cpp:
        * CXX/Header.cpp:
        * CXX/Inline.cpp:
        * CXX/Source.cpp:

          Resolved problems with context propagation in the different
          files. The problem was that the copy constructor in the Context
          class did not copy over the cdr_reader and cdr_writer generation
          flags set in the classes. Additionally, this commit also fixes
          problems with cdr-writer operation generation. This should now
          work for all schema definitions.

Wed Jun 29 20:05:58 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * XSCRT/XMLSchema/Types.hpp:
        * XSCRT/XSCRT/Elements.hpp:

          Added CDR traits for marshaling demarshaling types defined in
          the XML schema.

        * XSCRT/XMLSchema/CDR_Types.hpp:

          Defines argument traits for parameter passing to the read/write
          operation classes generated by the schema compiler.

Wed Jun 29 19:46:45 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * CXX/Elements.hpp:
        * CXX/Inline.cpp:
        * CXX/Source.cpp:
        * CXX/Elements.cpp:

          Added capability to generate the write_* operations for complex
          types. Also, added capability to serialize all non sequence
          elements and attributes of a complex type before writing the
          sequence element itself. This ordering enables the reader to
          reconstruct the type first before adding the individual
          sequence elements.

Mon Jun 27 16:34:37 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * CXX/Elements.hpp:
        * CXX/Generator.cpp:
        * CXX/Header.cpp:

          Added a new command line option -cxx-generate-cdr-reader-types
          and cxx-generate-cdr-writer-types to generate read/write and
          external >> and << operators. This commit will generate the
          operation signatures for types defined in a
          schema. Corresponding run-time support for this to work will be
          added shortly.

        * XSC/Traversal/Complex.hpp:
        * XSC/Traversal/Complex.cpp:

          Added two operations read_write_type () and insertion_extraction
          to generate read/write and << and >> operators for complex
          types. During traversal of a complex types, each of these
          operations are called which in turn determine if a type is
          complex or is simple but has attributes to generate
          corresponding operation signatures.

Fri Jun 24 14:15:23 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * CXX/Inline.cpp:
          Added fix for complex types constructors and copy constructors
          to inherit explicitly from the base class ::XSCRT::Type
          constructor. This should fix warnings in the build. This
          fixes the errors from the following commit.
          Fri Mar 11 10:39:34 2005  Will Otte <wotte@dre.vanderbilt.edu>

Tue Apr  5 10:22:00 CDT 2005  Will Otte <wotte@dre.vanderbilt.edu>

        * XSC.mwc

        Removed CCF from the list of projects built by this mwc.

        * CXX/Inline.cpp

        Changed the complex type initialization list.

        * CXX/Header.cpp
        * CXX/TraversalHeader.cpp
        * CXX/TypeInfoSource.cpp
        * CXX/WriterHeader.cpp

        Fixed all non-system includes in generated code to use ""
        instead of <>

Fri Mar 11 10:39:34 2005  Will Otte <wotte@dre.vanderbilt.edu>

        * XSCRT/XMLSchema/Types.hpp
        * XSCRT/XSCRT/ExtendedTypeInfo.ipp

        Disabled VC++ warnings for:
          - using this inside the base member initialization section
          - converting int to bool.

        See the comments at the top of those files for the rationale.

Thu Mar 10 13:11:56 2005  Will Otte <wotte@dre.vanderbilt.edu>

        * CXX/Inline.cpp
        * XSCRT/XMLSchema/Types.hpp

        Fixed a couple warnings in GCC.

        The fix in Inline.cpp is a HACK and should be looked into at a
        later date.

Fri Feb 25 13:00:40 2005  Will Otte <wotte@dre.vanderbilt.edu>

        * XSC.mpc
        * CXX/libCXX.mpc
        * IDL/libIDL.mpc
        * XSC/libXSC.mpc

        Made all paths relative to CIAO_ROOT so that XSC doesn't care
        where its being built.

        * XSC.mwc

        Removed the CCF elements from the build.  This was causing problems
        when generating makefiles.  Note that these CCF elements will still
        need to be build for XSC.

        * XSC/Parser.hpp

        Fixed a compile error on Mac OS X.

Mon Jan 31 13:42:08 2005  Will Otte <wotte@dre.vanderbilt.edu>

        Initial repository population.
