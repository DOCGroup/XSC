2005-12-18  James H. Hill  <hillj@isis.vanderbilt.edu>
  * Tests/Abstract/abstract.xsd
  * Tests/Abstract/abstract.xml
  
  Added test case for abstract complex types

2005-12-07  William Otte  <wotte@dre.vanderbilt.edu>

	* CXX/WriterHeader.cpp

	Removed Borland specifc ifdefs to make the fix from:
	2005-10-03  William Otte  <wotte@dre.vanderbilt.edu>
	apply to all compilers.
	
	* Examples/Library/Reader/Makefile
	* Examples/Library/Writer/Makefile

	Fixed the name of the xsc binary listed there. 
	
2005-11-30  William Otte  <wotte@dre.vanderbilt.edu>

	* xsc.cpp

	Updated version string.
	
	* CXX/Elements.hpp
	* CXX/Generator.cpp
	* CXX/Header.cpp
	* CXX/Inline.cpp
	* CXX/WriterHeader.cpp
	* XSC/Parser.cpp

	Added support for optionally generating code using lists or 
	vectors for sequences with cardinality greater than one. 
	
2005-10-03  William Otte  <wotte@dre.vanderbilt.edu>

	* CXX/Header.cpp

	Added opererator== and operator!= prototypes after classes that
	define them
	
	* CXX/WriterHeader.cpp
	* CXX/WriterSource.cpp

	Fixed compile errors in Borland.
	
Fri Aug 19 09:39:48 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * CXX/Inline.cpp:

          Fixed the following errors: when the count operation is
          generated, the signature is size_t count_foo () const; however
          the definition has the const missing. Similarly, void add_foo
          (Foo_Type) opertion in the cpp file is generated as add_foo
          (Foo_Type) const; fixed this error

2005-08-16  William Otte  <wotte@dre.vanderbilt.edu>

	* CXX/Header.cpp
	* CXX/Inline.cpp

	Added a method to count the number of elements present when
	maxOccurs > 1.

2005-08-05  William Otte  <wotte@dre.vanderbilt.edu>

	* XSC/SemanticGraph.hpp

	Added this back into the repository.

Thu Aug  4 11:25:52 2005  Arvind Krishna  <arvindkr@arvindkr.qualcomm.com>

	* Tests/ComplexTypeImport:

	  A simple test where a schema's type extends a type defined in
	  another schema.

	* Tests/ComplexTypeImport/Importee.xsd:
	* Tests/ComplexTypeImport/Importer.xsd:

	  Individual schema files.

Thu Aug  4 11:12:44 2005  Arvind Krishna  <arvindkr@arvindkr.qualcomm.com>

	* CXX/CDR.hpp:
	* CXX/CDR.cpp:
	  Removed these extraneous files as these are not necessary now!

Wed Jul 20 17:15:16 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * CXX/Source.cpp:

          I had missed handling elements that can be optional. These occur
          in the schema as minOccurs=0 maxOccurs=1..n. These should be
          written at the end of writing a complex element and then read
          last and added to the element. This commit addresses this bug.

Wed Jul 20 15:14:28 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * Added XSC as a module to the WashU CVS.

Tue Jul 19 17:27:25 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * NEWS:

          Added a NEWS file that illustrates the latest and greatest
          feature additions to XSC.

Tue Jul 19 17:10:43 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * CXX/Elements.hpp:
        * CXX/Generator.cpp:
        * CXX/Header.cpp:
        * CXX/Inline.cpp:
        * CXX/Source.cpp:

          This commit completes the generation of CDR Reader Writer
          operations automatically from XML schemas. The issues that were
          resolved include ensuring (1) ordering of operations, i.e.,
          reads and write and done in the same order, (2) optional
          attributes are read after the element is constructed, and (3)
          adding sequences after element constructions. Further care had
          to be taken to maintain list of required elements in a complex
          type, write them first and then read them back, construct the
          element and then add the non essential attributes. This commit
          should do all of this. We need to start working on regression
          testing of the various XML schemas to ensure correctness.

Wed Jul  6 12:14:37 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * CXX/Elements.hpp:
        * CXX/Generator.cpp:
        * CXX/Header.cpp:
        * CXX/Inline.cpp:
        * CXX/Source.cpp:

          Resolved problems with context propagation in the different
          files. The problem was that the copy constructor in the Context
          class did not copy over the cdr_reader and cdr_writer generation
          flags set in the classes. Additionally, this commit also fixes
          problems with cdr-writer operation generation. This should now
          work for all schema definitions.

Wed Jun 29 20:05:58 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * XSCRT/XMLSchema/Types.hpp:
        * XSCRT/XSCRT/Elements.hpp:

          Added CDR traits for marshaling demarshaling types defined in
          the XML schema.

        * XSCRT/XMLSchema/CDR_Types.hpp:

          Defines argument traits for parameter passing to the read/write
          operation classes generated by the schema compiler.

Wed Jun 29 19:46:45 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * CXX/Elements.hpp:
        * CXX/Inline.cpp:
        * CXX/Source.cpp:
        * CXX/Elements.cpp:

          Added capability to generate the write_* operations for complex
          types. Also, added capability to serialize all non sequence
          elements and attributes of a complex type before writing the
          sequence element itself. This ordering enables the reader to
          reconstruct the type first before adding the individual
          sequence elements.

Mon Jun 27 16:34:37 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * CXX/Elements.hpp:
        * CXX/Generator.cpp:
        * CXX/Header.cpp:

          Added a new command line option -cxx-generate-cdr-reader-types
          and cxx-generate-cdr-writer-types to generate read/write and
          external >> and << operators. This commit will generate the
          operation signatures for types defined in a
          schema. Corresponding run-time support for this to work will be
          added shortly.

        * XSC/Traversal/Complex.hpp:
        * XSC/Traversal/Complex.cpp:

          Added two operations read_write_type () and insertion_extraction
          to generate read/write and << and >> operators for complex
          types. During traversal of a complex types, each of these
          operations are called which in turn determine if a type is
          complex or is simple but has attributes to generate
          corresponding operation signatures.

Fri Jun 24 14:15:23 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * CXX/Inline.cpp:
          Added fix for complex types constructors and copy constructors
          to inherit explicitly from the base class ::XSCRT::Type
          constructor. This should fix warnings in the build. This
          fixes the errors from the following commit.
          Fri Mar 11 10:39:34 2005  Will Otte <wotte@dre.vanderbilt.edu>

Tue Apr  5 10:22:00 CDT 2005  Will Otte <wotte@dre.vanderbilt.edu>

	* XSC.mwc

	Removed CCF from the list of projects built by this mwc.

	* CXX/Inline.cpp

	Changed the complex type initialization list.

	* CXX/Header.cpp
	* CXX/TraversalHeader.cpp
	* CXX/TypeInfoSource.cpp
	* CXX/WriterHeader.cpp

	Fixed all non-system includes in generated code to use ""
	instead of <>

Fri Mar 11 10:39:34 2005  Will Otte <wotte@dre.vanderbilt.edu>

	* XSCRT/XMLSchema/Types.hpp
	* XSCRT/XSCRT/ExtendedTypeInfo.ipp

	Disabled VC++ warnings for:
	  - using this inside the base member initialization section
	  - converting int to bool.

	See the comments at the top of those files for the rationale.

Thu Mar 10 13:11:56 2005  Will Otte <wotte@dre.vanderbilt.edu>

	* CXX/Inline.cpp
	* XSCRT/XMLSchema/Types.hpp

	Fixed a couple warnings in GCC.

	The fix in Inline.cpp is a HACK and should be looked into at a
	later date.

Fri Feb 25 13:00:40 2005  Will Otte <wotte@dre.vanderbilt.edu>

	* XSC.mpc
	* CXX/libCXX.mpc
	* IDL/libIDL.mpc
	* XSC/libXSC.mpc

	Made all paths relative to CIAO_ROOT so that XSC doesn't care
	where its being built.

	* XSC.mwc

	Removed the CCF elements from the build.  This was causing problems
	when generating makefiles.  Note that these CCF elements will still
	need to be build for XSC.

	* XSC/Parser.hpp

	Fixed a compile error on Mac OS X.

Mon Jan 31 13:42:08 2005  Will Otte <wotte@dre.vanderbilt.edu>

	Initial repository population.
